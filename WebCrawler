package javaapplication3;
import java.net.URL;
import java.util.ArrayList;
import java.util.Scanner;
import java.net.*;
import java.io.*;
import java.io.DataInputStream;
/**
 *
 * @author aeichhorn01
 */
public class WebCrawler 
{
public static void main(String[] args) 
{
    java.util.Scanner input = new java.util.Scanner(System.in);
    System.out.print("Enter a URL: ");
    String url = input.nextLine();
    crawler(url); // Traverse the Web from a starting url
}

public static void crawler(String startingURL) 
{
    java.util.Scanner input = new java.util.Scanner(System.in);
    
    boolean hasWord = false;
    
    ArrayList<String> listOfPendingURLs = new ArrayList<>();
    ArrayList<String> listOfTraversedURLs = new ArrayList<>();

    listOfPendingURLs.add(startingURL);
    
    System.out.print("Enter a keyword: ");
    String word = input.nextLine();
    
    while (!listOfPendingURLs.isEmpty() && listOfTraversedURLs.size() <= 100) 
    {
        String urlString = listOfPendingURLs.remove(0);
        if (!listOfTraversedURLs.contains(urlString)) 
        {
            
            
            listOfTraversedURLs.add(urlString);
            System.out.println("Craw " + urlString);
            
            for (String s: getSubURLs(urlString)) 
            { 
                if (!listOfTraversedURLs.contains(s))
                {
                    hasWord = findWord(urlString, word);
                    if(hasWord);
                    {
                        int count = listOfTraversedURLs.size();
                        System.out.print("The URL " + urlString + " contains the word " + word);
                        System.out.print("The number of pages searched has been " + count);
                    }
                    
                    listOfPendingURLs.add(s);
                }
            }
        }
    }
}

public static ArrayList<String> getSubURLs(String urlString) 
{
        ArrayList<String> list = new ArrayList<>();

        try 
        {
            java.net.URL url = new java.net.URL(urlString);
            Scanner input = new Scanner(url.openStream());
            int current = 0;
            
            while (input.hasNext()) 
            {
                String line = input.nextLine();
                current = line.indexOf("http:", current);
                
                while (current > 0) 
                {
                    int endIndex = line.indexOf("\"", current);
                    if (endIndex > 0) 
                    { // Ensure that a correct URL is found
                        list.add(line.substring(current, endIndex));
                        current = line.indexOf("http:", endIndex);
                    }
                    else
                        current = -1;
                }
            }
        }
        catch (Exception ex)
        {
            System.out.println("Error: " + ex.getMessage());
        }
  
        return list;
}

    private static boolean findWord(String url, String word) throws MalformedURLException, IOException 
    {
        URL url1 = new URL(url);
        Scanner input = new Scanner (url1.openStream());
        
        
    }
}
